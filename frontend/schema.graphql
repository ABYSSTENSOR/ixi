scalar JSON

type User {
  id: ID!
  username: String!
  email: String!
  first_name: String!
  last_name: String!
}

type Agent {
  id: ID!
  name: String!
  status: String!
}

type Goal {
  name: String!
  description: String!
  complete: Boolean!
}

type Task {
  id: ID!
  user: User!
  goals: [Goal]
  isComplete: Boolean!
  createdAt: String!
  completeAt: String!
}

type Query {
  task(id: ID!): Task
}

type TaskLog {
  id: ID!
  task: Task!
  agent: Agent!
  assistantTimestamp: String!
  userTimestamp: String
  command: JSON!
  authorized: Boolean
  userResponse: String
}

type Query {
  agents: [Agent!]!
  agent(id: ID!): Agent
  tasks: [Task!]!
  task(id: ID!): Task
  taskLogMessages(taskId: ID!): [TaskLog!]!
  taskLog(id: ID!): TaskLog
  users: [User!]!
  user(id: ID!): User
}

type Mutation {
  respondToTaskMsg(input: TaskLogResponseInput!): TaskLogResponse
}

input TaskLogResponseInput {
  id: ID!
  response: String
  authorized: Boolean!
}

type TaskLogResponse {
  taskLogMessage: TaskLog
  errors: [String!]
}
